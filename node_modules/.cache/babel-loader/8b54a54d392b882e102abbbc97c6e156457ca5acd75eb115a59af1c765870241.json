{"ast":null,"code":"var _jsxFileName = \"/Users/ashokpaudelapril/RAI_LAB-/src/components/PhotoSlider.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './PhotoSlider.css'; // Make sure this CSS file is correctly linked\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PhotoSlider = ({\n  images,\n  interval = 4000\n}) => {\n  _s();\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const totalImages = images.length;\n\n  // Auto-play effect: Advances slide automatically (STILL COMMENTED OUT TO DISABLE AUTOPLAY)\n  /*\n  useEffect(() => {\n      if (totalImages === 0) return;\n       const slideInterval = setInterval(() => {\n          setCurrentIndex((prevIndex) => (prevIndex + 1) % totalImages);\n      }, interval);\n       return () => clearInterval(slideInterval);\n  }, [interval, totalImages]);\n  */\n\n  const goToPrevSlide = () => {\n    setCurrentIndex(prevIndex => (prevIndex - 1 + totalImages) % totalImages);\n  };\n  const goToNextSlide = () => {\n    setCurrentIndex(prevIndex => (prevIndex + 1) % totalImages);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"photo-slider-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"photo-slider-track\"\n      // This style moves the entire track left/right to show the current image\n      ,\n      style: {\n        transform: `translateX(-${currentIndex * 100}%)`\n      },\n      children: images.map((image, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"photo-slide\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: image.src,\n          alt: image.alt || `Slide ${index + 1}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 25\n        }, this), image.alt && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"photo-caption\",\n          children: image.alt\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 29\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"slider-button prev\",\n      onClick: goToPrevSlide,\n      children: \"\\u276E\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"slider-button next\",\n      onClick: goToNextSlide,\n      children: \"\\u276F\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n};\n_s(PhotoSlider, \"tusBbsahUVevXfyh6oH5R6YDC9Q=\");\n_c = PhotoSlider;\nexport default PhotoSlider;\nvar _c;\n$RefreshReg$(_c, \"PhotoSlider\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","PhotoSlider","images","interval","_s","currentIndex","setCurrentIndex","totalImages","length","goToPrevSlide","prevIndex","goToNextSlide","className","children","style","transform","map","image","index","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/ashokpaudelapril/RAI_LAB-/src/components/PhotoSlider.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './PhotoSlider.css'; // Make sure this CSS file is correctly linked\n\nconst PhotoSlider = ({ images, interval = 4000 }) => {\n    const [currentIndex, setCurrentIndex] = useState(0);\n    const totalImages = images.length;\n\n    // Auto-play effect: Advances slide automatically (STILL COMMENTED OUT TO DISABLE AUTOPLAY)\n    /*\n    useEffect(() => {\n        if (totalImages === 0) return;\n\n        const slideInterval = setInterval(() => {\n            setCurrentIndex((prevIndex) => (prevIndex + 1) % totalImages);\n        }, interval);\n\n        return () => clearInterval(slideInterval);\n    }, [interval, totalImages]);\n    */\n\n    const goToPrevSlide = () => {\n        setCurrentIndex((prevIndex) => (prevIndex - 1 + totalImages) % totalImages);\n    };\n\n    const goToNextSlide = () => {\n        setCurrentIndex((prevIndex) => (prevIndex + 1) % totalImages);\n    };\n\n    return (\n        <div className=\"photo-slider-container\">\n            {/* The photo-slider-track handles the horizontal movement of all slides */}\n            <div\n                className=\"photo-slider-track\"\n                // This style moves the entire track left/right to show the current image\n                style={{ transform: `translateX(-${currentIndex * 100}%)` }}\n            >\n                {/* Map through each image to create a slide */}\n                {images.map((image, index) => (\n                    <div key={index} className=\"photo-slide\">\n                        <img src={image.src} alt={image.alt || `Slide ${index + 1}`} />\n                        {/* Display caption only if alt text is provided */}\n                        {image.alt && (\n                            <div className=\"photo-caption\">\n                                {image.alt}\n                            </div>\n                        )}\n                    </div>\n                ))}\n            </div>\n\n            {/* Previous Button */}\n            <button className=\"slider-button prev\" onClick={goToPrevSlide}>&#10094;</button>\n            {/* Next Button */}\n            <button className=\"slider-button next\" onClick={goToNextSlide}>&#10095;</button>\n\n            {/* Navigation Dots are intentionally removed */}\n        </div>\n    );\n};\n\nexport default PhotoSlider;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,mBAAmB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE5B,MAAMC,WAAW,GAAGA,CAAC;EAAEC,MAAM;EAAEC,QAAQ,GAAG;AAAK,CAAC,KAAK;EAAAC,EAAA;EACjD,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGT,QAAQ,CAAC,CAAC,CAAC;EACnD,MAAMU,WAAW,GAAGL,MAAM,CAACM,MAAM;;EAEjC;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAII,MAAMC,aAAa,GAAGA,CAAA,KAAM;IACxBH,eAAe,CAAEI,SAAS,IAAK,CAACA,SAAS,GAAG,CAAC,GAAGH,WAAW,IAAIA,WAAW,CAAC;EAC/E,CAAC;EAED,MAAMI,aAAa,GAAGA,CAAA,KAAM;IACxBL,eAAe,CAAEI,SAAS,IAAK,CAACA,SAAS,GAAG,CAAC,IAAIH,WAAW,CAAC;EACjE,CAAC;EAED,oBACIP,OAAA;IAAKY,SAAS,EAAC,wBAAwB;IAAAC,QAAA,gBAEnCb,OAAA;MACIY,SAAS,EAAC;MACV;MAAA;MACAE,KAAK,EAAE;QAAEC,SAAS,EAAE,eAAeV,YAAY,GAAG,GAAG;MAAK,CAAE;MAAAQ,QAAA,EAG3DX,MAAM,CAACc,GAAG,CAAC,CAACC,KAAK,EAAEC,KAAK,kBACrBlB,OAAA;QAAiBY,SAAS,EAAC,aAAa;QAAAC,QAAA,gBACpCb,OAAA;UAAKmB,GAAG,EAAEF,KAAK,CAACE,GAAI;UAACC,GAAG,EAAEH,KAAK,CAACG,GAAG,IAAI,SAASF,KAAK,GAAG,CAAC;QAAG;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,EAE9DP,KAAK,CAACG,GAAG,iBACNpB,OAAA;UAAKY,SAAS,EAAC,eAAe;UAAAC,QAAA,EACzBI,KAAK,CAACG;QAAG;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACT,CACR;MAAA,GAPKN,KAAK;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAQV,CACR;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC,eAGNxB,OAAA;MAAQY,SAAS,EAAC,oBAAoB;MAACa,OAAO,EAAEhB,aAAc;MAAAI,QAAA,EAAC;IAAQ;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAEhFxB,OAAA;MAAQY,SAAS,EAAC,oBAAoB;MAACa,OAAO,EAAEd,aAAc;MAAAE,QAAA,EAAC;IAAQ;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAG/E,CAAC;AAEd,CAAC;AAACpB,EAAA,CAvDIH,WAAW;AAAAyB,EAAA,GAAXzB,WAAW;AAyDjB,eAAeA,WAAW;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}